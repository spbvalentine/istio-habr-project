worker_processes auto;
error_log /var/log/nginx/error.log;
pid /pid/nginx.pid;

include /etc/nginx/conf-enabled.d/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    proxy_temp_path /var/log/nginx/tmp/proxy;
    fastcgi_temp_path /var/log/nginx/tmp/fastcgi;
    client_body_temp_path /var/log/nginx/tmp/client;
    uwsgi_temp_path /var/log/nginx/tmp/uwsgi;
    scgi_temp_path /var/log/nginx/tmp/scgi;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf-enabled.d/*.conf;

    server {
        listen 8080 default_server;
        server_name _;
        root /www;

        # Load configuration files for the default server block.
        include /etc/nginx/nginx.default.d/*.conf;

        location = / {
        }

        location = /401 {
            add_header 'Content-Type' 'application/json';
            return 401 '{"message": "Unauthorized"}';
        }

        location = /403 {
            add_header 'Content-Type' 'application/json';
            return 403 '{"message": "Forbidden"}';
        }

        location = /404 {
            add_header 'Content-Type' 'application/json';
            return 404 '{"message": "Not Found"}';
        }

        location = /500 {
            add_header 'Content-Type' 'application/json';
            return 500 '{"message": "Internal Server Error"}';
        }

        location ~* ^/(liveness|readiness)$ {
            add_header 'Content-Type' 'application/json';
            return 200;
        }

        location / {
            try_files $uri $uri/ /;
        }
    }
}